pipeline {
    agent any

    environment {
        SNOWFLAKE_ACCOUNT = credentials('snowflake-account')
    }

    stages {
        stage('Clone repository') {
            steps {
				echo 'inside clone repository'
                script {
                    // Checkout the repository and capture the result
                    def gitCheckout = checkout(
                        [
                            $class: 'GitSCM',
                            branches: [[name: '*/main']], // Specify the branch to checkout
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            submoduleCfg: [],
                            userRemoteConfigs: [[url: 'https://github.com/sujithgh/snowflakerepo.git']]
                        ]
                    )

                    // Check if the checkout was successful
                    if (gitCheckout) {
                        echo 'Repository cloned successfully'
                    } else {
                        error 'Failed to clone repository'
                    }
                }
            }
        }

        stage('List Repository Contents') {
            steps {
                bat 'dir' // List the contents of the current directory (where the repository was cloned)
            }
        }

        stage('Deploy to Snowflake') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'snowflake-user', passwordVariable: 'SNOWSQL_PWD', usernameVariable: 'SNOWFLAKE_USER')]) {
                        
                            bat '"C:\\Program Files\\Snowflake SnowSQL\\snowsql.exe" -a "%SNOWFLAKE_ACCOUNT%" -u "%SNOWFLAKE_USER%" -d "AWSDB" -s "PUBLIC" -f "C:\\Program Files\\Snowflake SnowSQL\\firstscript.sql"'
                                            }
                }
            }
        }
    }
}

